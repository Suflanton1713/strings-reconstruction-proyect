[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\lialq\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\lialq\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.11 (Amazon.com Inc. Java 17.0.12)
[debug] Load.defaultLoad until apply took 118.9626ms
[debug]           Load.loadUnit: plugins took 107.351801ms
[debug]           Load.loadUnit: defsScala took 0.3322ms
[debug] [Loading] Scanning directory C:\Users\lialq\IdeaProjects\strings-reconstruction-proyect\project
[debug]             Load.loadUnit: mkEval took 10.4642ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lialq\IdeaProjects\strings-reconstruction-proyect\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 24.0882 ms
[info] loading settings for project strings-reconstruction-proyect-build from idea.sbt...
[debug]               Load.resolveProject(strings-reconstruction-proyect-build) took 51.5157ms
[debug]             Load.loadTransitive: finalizeProject(Project(id strings-reconstruction-proyect-build, base: C:\Users\lialq\IdeaProjects\strings-reconstruction-proyect\project, plugins: List(<none>))) took 88.5633ms
[debug] [Loading] Done in C:\Users\lialq\IdeaProjects\strings-reconstruction-proyect\project, returning: (strings-reconstruction-proyect-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3611.862701ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.246999ms
[debug]         Load.loadUnit(file:/C:/Users/lialq/IdeaProjects/strings-reconstruction-proyect/project/, ...) took 3737.2272ms
[debug]       Load.apply: load took 3940.533099ms
[debug]       Load.apply: resolveProjects took 8.0312ms
[debug]       Load.apply: finalTransforms took 74.648599ms
[debug]       Load.apply: config.delegates took 9.949501ms
[debug]       Load.apply: Def.make(settings)... took 490.7373ms
[debug]       Load.apply: structureIndex took 120.582ms
[debug]       Load.apply: mkStreams took 1.8536ms
[info] loading project definition from C:\Users\lialq\IdeaProjects\strings-reconstruction-proyect\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 7146.453301ms
[debug]     Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory C:\Users\lialq\IdeaProjects\strings-reconstruction-proyect
[debug]       Load.loadUnit: mkEval took 0.7996ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.1616 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 40.7711ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\lialq\IdeaProjects\strings-reconstruction-proyect, plugins: List(<none>))) took 45.869001ms
[debug] [Loading] Done in C:\Users\lialq\IdeaProjects\strings-reconstruction-proyect, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2476.4772ms
[debug]     Load.loadUnit: cleanEvalClasses took 36.465ms
[debug]   Load.loadUnit(file:/C:/Users/lialq/IdeaProjects/strings-reconstruction-proyect/, ...) took 9661.158799ms
[debug] Load.apply: load took 9680.7404ms
[debug] Load.apply: resolveProjects took 0.1828ms
[debug] Load.apply: finalTransforms took 35.345599ms
[debug] Load.apply: config.delegates took 0.389499ms
[debug] Load.apply: Def.make(settings)... took 103.1315ms
[debug] Load.apply: structureIndex took 32.324399ms
[debug] Load.apply: mkStreams took 0.003101ms
[info] set current project to strings-reconstruction-proyect (in build file:/C:/Users/lialq/IdeaProjects/strings-reconstruction-proyect/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
